import subprocess
import requests
import os
from dotenv import load_dotenv

load_dotenv()
API_KEY=os.getenv("ACH_API_KEY")

def get_hash(args):
    result = subprocess.run(
        ["sha256sum", *args],
        capture_output=True,
        text=True,
        check=True,
    )
    print(result.stdout.strip().split()[0])
    mb_hash(result.stdout.strip().split()[0])

def mb_hash(file_hash):
    url = "https://mb-api.abuse.ch/api/v1/"
    headers = {"Auth-Key": API_KEY}
    data = {
        "query": "get_info",
        "hash": file_hash
    }

    response = requests.post(url, headers=headers, data=data)
    json_resp = response.json()
    status = json_resp.get("query_status")

    if status == "hash_not_found":
        print(f"No results found for hash {file_hash} in MalwareBazaar.")
        return
    elif status == "illegal_hash":
        print(f"The provided value is not a valid hash: {file_hash}")
        return

    entry = json_resp["data"][0]

    print("=" * 60)
    print("   QUICK MALWARE TRIAGE REPORT   ")
    print("=" * 60)
    print(f"SHA256     : {entry.get('sha256_hash')}")
    print(f"File Name  : {entry.get('file_name')}")
    print(f"File Type  : {entry.get('file_type')}")
    print(f"First Seen : {entry.get('first_seen')}")
    print(f"Signature  : {entry.get('signature')}")
    print(f"Tags       : {', '.join(entry.get('tags', []))}")

    vendor = entry.get("vendor_intel", {})
    if "ANY.RUN" in vendor:
        v = vendor["ANY.RUN"][0]
        print(f"ANY.RUN    : {v.get('verdict')} - {v.get('analysis_url')}")
    if "Triage" in vendor:
        v = vendor["Triage"]
        print(f"Triage     : Score {v.get('score')} - {v.get('link')}")
    if "ReversingLabs" in vendor:
        v = vendor["ReversingLabs"]
        print(f"ReversingLabs: {v.get('status')} ({v.get('threat_name')})")
    if "Kaspersky" in vendor:
        v = vendor["Kaspersky"]
        print(f"Kaspersky  : {v.get('verdict')} - {', '.join(v.get('detections', []))}")

    fi = entry.get("file_information", [])
    if fi:
        print(f"Sandbox    : {fi[0].get('value')}")
    print("=" * 60, "\n")

if __name__ == "__main__" :
    hash_value = input("Enter file hash (MD5, SHA1, or SHA256): ").strip()
    mb_hash(hash_value)